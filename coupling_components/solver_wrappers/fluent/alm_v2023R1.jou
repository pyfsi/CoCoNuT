;   GENERAL SETTINGS
file set-batch-options n n n
(enable-dynamic-mesh-node-ids #t)
(define unsteady |UNSTEADY|)
(define flow_iterations |FLOW_ITERATIONS|)
(define check_coupling_convergence |CHECK_COUPLING_CONVERGENCE|)
(define delta_t |DELTA_T|)
(define timestep_start |TIMESTEP_START|)
;
;   FUNCTION DEFINITIONS
(define (send_message message)
    (system (string-append "touch " message ".coco"))
)
(define (wait_message message)
    (do ((j 0 j)) ((= j 1))
        (if
            (file-exists? (string-append message ".coco"))
            (begin
                (set! j 1)
                (system (string-append "rm " message ".coco"))
            )
            (system "sleep 0.1")
        )
    )
)
(define (check_message message)
    (if
        (file-exists? (string-append message ".coco"))
        (begin
            (newline)(display (string-append "RECEIVED MESSAGE " message))(newline)
            (system (string-append "rm " message ".coco"))
            (= 0 0)
        )
        (= 0 1)
    )
)
(define (print-iter-info)
    (begin
        (newline)
        (display (format #f "### timestep ~a, iteration ~a ###"
            (%rpgetvar 'udf/timestep) (%rpgetvar 'udf/iteration)) )
        (newline)
    )
)
;
;   READ CASE/DATA, COMPILE AND LOAD UDF
(if (= timestep_start 0)
    (begin
        (ti-menu-load-string "file read-case-data |CASE|")
        (rp-var-define 'udf/timestep 0 'int #f)
        (rp-var-define 'udf/iteration 0 'int #f)
        (ti-menu-load-string "define user-defined user-defined-memory 4")
        (ti-menu-load-string "define user-defined compiled-functions compile \"v2023R1\" y \"alm_v2023R1.c\" \"\" \"\"")
        (ti-menu-load-string "define user-defined compiled-functions load \"v2023R1\"")
    )
    (ti-menu-load-string (format #f "file read-case-data \"case_timestep~a.cas\"" timestep_start))
)
;   STORE REPORTING INTERVAL
;
(define reporting_interval (%rpgetvar 'iteration-chunk))
;
;   SAVE CASE INFO TO TEXT FILE
report summary y "report.sum"
(send_message "case_info_exported")
;
;   SETUP ALM FUNCTION HOOKS
(if (= timestep_start 0)
    (begin
        (ti-menu-load-string "define user-defined function-hooks adjust \"set_source::v2023R1\"")
        ; !!! The number of sources changes when other turbulence models are used! (The following line works for the 2-eqn models). This makes everything very case-specific!
        ; Additionally, it is now mandatory that the fluid zone where the sources are defined is called "fluid"
        (ti-menu-load-string "define boundary-conditions fluid fluid no yes 0 1 no yes \"xmom_source::v2023R1\" 1 no yes \"ymom_source::v2023R1\" 1 no yes \"zmom_source::v2023R1\" 0 0 0 no no no 0 no 0 no 0 no 0 no 0 no 1 no no no no no")
        (ti-menu-load-string "solve report-definitions add f_x volume-integral report-type volume-integral field udm-1 zone-names fluid () average-over 1 per-zone? no quit")
        (ti-menu-load-string "solve report-definitions add f_y volume-integral report-type volume-integral field udm-2 zone-names fluid () average-over 1 per-zone? no quit")
        (ti-menu-load-string "solve report-definitions add f_z volume-integral report-type volume-integral field udm-3 zone-names fluid () average-over 1 per-zone? no quit")
        (ti-menu-load-string "solve report-files add report_coconut active? yes file-name \"./report-coconut.out\" frequency 1 frequency-of iteration name \"report_coconut\" print? yes report-defs f_x f_y f_z () write-instantaneous-values? yes quit")
    )
)
;
;   READ COORDINATES
(wait_message "model_parts_created")
(ti-menu-load-string "define user-defined execute-on-demand \"read_coordinates::v2023R1\"")
;
;   SET DELTA_T
(if unsteady
    (ti-menu-load-string (format #f "solve set time-step ~a" delta_t))
)
;
;   FSI LOOP
(do ((j 0 j)) ((= j 1))
    (system "sleep 0.1")
    (if (check_message "save")
        (begin
            (ti-menu-load-string (format #f "file write-case-data \"case_timestep~a.cas\"" (%rpgetvar 'udf/timestep)))
            (send_message "save_ready")
        )
    )
    (if (check_message "next")
        (begin
            |END_OF_TIMESTEP_COMMANDS|
            (ti-menu-load-string "define user-defined execute-on-demand \"increase_time::v2023R1\"")
            (rpsetvar 'udf/iteration 0)
            (rpsetvar 'udf/timestep (+ (%rpgetvar 'udf/timestep) 1))
            (print-iter-info)
            (send_message "next_ready")
        )
    )
    (if (check_message "continue")
        (begin
            (rpsetvar 'udf/iteration (+ (%rpgetvar 'udf/iteration) 1))
            (ti-menu-load-string "define user-defined execute-on-demand \"read_coordinates::v2023R1\"")
            (print-iter-info)
            (if check_coupling_convergence
                (begin
                    (ti-menu-load-string "solve set reporting-interval 1")
                    (if unsteady
                        (if (= (%rpgetvar 'udf/iteration) 1)
                            (begin
                                (ti-menu-load-string "solve dual-time-iterate 1 0")
                                (ti-menu-load-string "solve iterate 1")
                                (if (%rpgetvar 'solution/converged?)
                                    (begin
                                        (newline)(display "Check convergence :: converged")(newline)
                                        (send_message "solver_converged")
                                    )
                                    (begin
                                        (newline)(display "Check convergence :: not converged")(newline)
                                        (ti-menu-load-string "solve set reporting-interval reporting_interval")
                                        (ti-menu-load-string (format #f "solve iterate ~d" (- flow_iterations 1)))
                                    )
                                )
                            )
                            (begin
                                (ti-menu-load-string "solve dual-time-iterate 0 1")
                                (ti-menu-load-string "solve iterate 1")
                                (if (%rpgetvar 'solution/converged?)
                                    (begin
                                        (newline)(display "Check convergence :: converged")(newline)
                                        (send_message "solver_converged")
                                    )
                                    (begin
                                        (newline)(display "Check convergence :: not converged")(newline)
                                        (ti-menu-load-string "solve set reporting-interval reporting_interval")
                                        (ti-menu-load-string "solve dual-time-iterate 0 0")
                                        (ti-menu-load-string (format #f "solve iterate ~d" (- flow_iterations 1)))
                                    )
                                )
                            )
                        )
                        (begin
                            (ti-menu-load-string "solve iterate 1")
                            (if (%rpgetvar 'solution/converged?)
                                (begin
                                    (newline)(display "Check convergence :: converged")(newline)
                                    (send_message "solver_converged")
                                )
                                (begin
                                    (newline)(display "Check convergence :: not converged")(newline)
                                    (ti-menu-load-string "solve set reporting-interval reporting_interval")
                                    (ti-menu-load-string (format #f "solve iterate ~d" (- flow_iterations 1)))
                                )
                            )
                        )
                    )
                )
                (begin
                    (if unsteady
                        (if (= (%rpgetvar 'udf/iteration) 1)
                            (begin
                                (ti-menu-load-string "solve dual-time-iterate 1 0")
                                (ti-menu-load-string (format #f "solve iterate ~d" flow_iterations))
                            )
                            (begin
                                (ti-menu-load-string "solve dual-time-iterate 0 1")
                                (ti-menu-load-string "solve iterate 1")
                                (ti-menu-load-string "solve dual-time-iterate 0 0")
                                (ti-menu-load-string (format #f "solve iterate ~d" (- flow_iterations 1)))
                            )
                        )
                        (begin
                            (ti-menu-load-string "solve iterate flow_iterations")
                        )
                    )
                )
            )
            (ti-menu-load-string "define user-defined execute-on-demand \"store_traction::v2023R1\"")
            (send_message "continue_ready")
        )
    )
    (if (check_message "store_grid")
        (begin
            (ti-menu-load-string "define user-defined execute-on-demand \"store_coordinates_id::v2023R1\"")
            (send_message "store_grid_ready")
        )
    )
    (if (check_message "stop")
        (begin
            |END_OF_TIMESTEP_COMMANDS|
            (set! j 1)
            (send_message "stop_ready")
            (system "sleep 0.1")
        )
    )
)
exit y
